vertex_program normalMap glsl{
	source :shaders/vert/normal_map.vert
}
fragment_program normalMap glsl{
	source :shaders/frag/normal_map.frag
}

material block_normal_material 
{
    receive_shadows on 

    technique
    {
        pass block_normal_material
        {
            ambient 0.800000011920929 0.800000011920929 0.800000011920929 1.0
            diffuse 0.6400000190734865 0.6400000190734865 0.6400000190734865 1.0
            specular 0.5 0.5 0.5 1.0 12.5
            emissive 0.0 0.0 0.0 1.0

            alpha_to_coverage off
            colour_write on
            cull_hardware clockwise
            depth_check on
            depth_func less_equal
            depth_write on
            illumination_stage 
            light_clip_planes off
            light_scissor off
            lighting on
            normalise_normals off
            polygon_mode solid
            scene_blend one zero
            scene_blend_op add
            shading gouraud
            transparent_sorting on
			
			vertex_program_ref normalMap{
			}
			
			fragment_program_ref normalMap{
			}

			texture_unit {
                texture block_normal_uv.png
				map1 block_normal_nm.png
                tex_address_mode wrap
                scale 1.0 1.0
                tex_coord_set 0
                colour_op modulate
            }
        }
    }
}
